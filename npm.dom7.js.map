{"version":3,"sources":["webpack:///./node_modules/dom7/dom7.esm.js"],"names":["Dom7","items","obj","proto","__proto__","Object","defineProperty","get","set","value","makeReactive","Array","arrayFlat","arr","res","forEach","el","isArray","push","arrayFilter","callback","prototype","filter","call","$","selector","context","window","getWindow","document","getDocument","html","trim","indexOf","toCreate","tempParent","createElement","innerHTML","i","childNodes","length","a","querySelectorAll","qsa","nodeType","uniqueArray","arrayUnique","addClass","classes","classNames","map","c","split","this","classList","add","removeClass","remove","toggleClass","className","toggle","hasClass","contains","attr","attrs","arguments","getAttribute","setAttribute","attrName","removeAttr","removeAttribute","transform","style","transition","duration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","j","events","event","dom7LiveListeners","proxyListener","addEventListener","dom7Listeners","off","handlers","handler","dom7proxy","removeEventListener","splice","trigger","CustomEvent","evt","detail","bubbles","cancelable","data","dataIndex","dispatchEvent","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","getPropertyValue","outerHeight","offsetHeight","offset","box","getBoundingClientRect","body","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","getComputedStyle","css","props","prop","each","index","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","children","removeChild","fn","noTrigger","shortcut","name"],"mappings":"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","file":"npm.dom7.js","sourcesContent":["/**\n * Dom7 4.0.1\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * https://framework7.io/docs/dom7.html\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: October 27, 2021\n */\nimport { getWindow, getDocument } from 'ssr-window';\n\n/* eslint-disable no-proto */\nfunction makeReactive(obj) {\n  const proto = obj.__proto__;\n  Object.defineProperty(obj, '__proto__', {\n    get() {\n      return proto;\n    },\n\n    set(value) {\n      proto.__proto__ = value;\n    }\n\n  });\n}\n\nclass Dom7 extends Array {\n  constructor(items) {\n    super(...(items || []));\n    makeReactive(this);\n  }\n\n}\n\nfunction arrayFlat(arr = []) {\n  const res = [];\n  arr.forEach(el => {\n    if (Array.isArray(el)) {\n      res.push(...arrayFlat(el));\n    } else {\n      res.push(el);\n    }\n  });\n  return res;\n}\nfunction arrayFilter(arr, callback) {\n  return Array.prototype.filter.call(arr, callback);\n}\nfunction arrayUnique(arr) {\n  const uniqueArray = [];\n\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group) => group.toUpperCase());\n}\n\n// eslint-disable-next-line\n\nfunction qsa(selector, context) {\n  if (typeof selector !== 'string') {\n    return [selector];\n  }\n\n  const a = [];\n  const res = context.querySelectorAll(selector);\n\n  for (let i = 0; i < res.length; i += 1) {\n    a.push(res[i]);\n  }\n\n  return a;\n}\n\nfunction $(selector, context) {\n  const window = getWindow();\n  const document = getDocument();\n  let arr = [];\n\n  if (!context && selector instanceof Dom7) {\n    return selector;\n  }\n\n  if (!selector) {\n    return new Dom7(arr);\n  }\n\n  if (typeof selector === 'string') {\n    const html = selector.trim();\n\n    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n      let toCreate = 'div';\n      if (html.indexOf('<li') === 0) toCreate = 'ul';\n      if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n      if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n      if (html.indexOf('<tbody') === 0) toCreate = 'table';\n      if (html.indexOf('<option') === 0) toCreate = 'select';\n      const tempParent = document.createElement(toCreate);\n      tempParent.innerHTML = html;\n\n      for (let i = 0; i < tempParent.childNodes.length; i += 1) {\n        arr.push(tempParent.childNodes[i]);\n      }\n    } else {\n      arr = qsa(selector.trim(), context || document);\n    } // arr = qsa(selector, document);\n\n  } else if (selector.nodeType || selector === window || selector === document) {\n    arr.push(selector);\n  } else if (Array.isArray(selector)) {\n    if (selector instanceof Dom7) return selector;\n    arr = selector;\n  }\n\n  return new Dom7(arrayUnique(arr));\n}\n\n$.fn = Dom7.prototype;\n\n// eslint-disable-next-line\n\nfunction addClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.add(...classNames);\n  });\n  return this;\n}\n\nfunction removeClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.remove(...classNames);\n  });\n  return this;\n}\n\nfunction toggleClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    classNames.forEach(className => {\n      el.classList.toggle(className);\n    });\n  });\n}\n\nfunction hasClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  return arrayFilter(this, el => {\n    return classNames.filter(className => el.classList.contains(className)).length > 0;\n  }).length > 0;\n}\n\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  } // Set attrs\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n\n  return this;\n}\n\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction data(key, value) {\n  let el;\n\n  if (typeof value === 'undefined') {\n    el = this[0];\n    if (!el) return undefined; // Get value\n\n    if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n      return el.dom7ElementDataStorage[key];\n    }\n\n    const dataKey = el.getAttribute(`data-${key}`);\n\n    if (dataKey) {\n      return dataKey;\n    }\n\n    return undefined;\n  } // Set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n\n  return this;\n}\n\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\n\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n\n  if (el.dataset) {\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      const attr = el.attributes[i];\n\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;else if (dataset[key] === 'true') dataset[key] = true;else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n\n  return dataset;\n}\n\nfunction val(value) {\n  if (typeof value === 'undefined') {\n    // get value\n    const el = this[0];\n    if (!el) return undefined;\n\n    if (el.multiple && el.nodeName.toLowerCase() === 'select') {\n      const values = [];\n\n      for (let i = 0; i < el.selectedOptions.length; i += 1) {\n        values.push(el.selectedOptions[i].value);\n      }\n\n      return values;\n    }\n\n    return el.value;\n  } // set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n\n  return this;\n}\n\nfunction value(value) {\n  return this.val(value);\n}\n\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transform = transform;\n  }\n\n  return this;\n}\n\nfunction transition(duration) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\n  }\n\n  return this;\n}\n\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n      const parents = $(target).parents(); // eslint-disable-line\n\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    listener.apply(this, eventData);\n  }\n\n  const events = eventType.split(' ');\n  let j;\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n  const events = eventType.split(' ');\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\n\nfunction trigger(...args) {\n  const window = getWindow();\n  const events = args[0].split(' ');\n  const eventData = args[1];\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n\n      if (window.CustomEvent) {\n        const evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true\n        });\n        el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction transitionEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('transitionend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('transitionend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction animationEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('animationend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('animationend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction width() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\n\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n\n    return this[0].offsetWidth;\n  }\n\n  return null;\n}\n\nfunction height() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\n\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n\n    return this[0].offsetHeight;\n  }\n\n  return null;\n}\n\nfunction offset() {\n  if (this.length > 0) {\n    const window = getWindow();\n    const document = getDocument();\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: box.top + scrollTop - clientTop,\n      left: box.left + scrollLeft - clientLeft\n    };\n  }\n\n  return null;\n}\n\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n\n  return this;\n}\n\nfunction show() {\n  const window = getWindow();\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n\n  return this;\n}\n\nfunction styles() {\n  const window = getWindow();\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\n\nfunction css(props, value) {\n  const window = getWindow();\n  let i;\n\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      // .css('width')\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      // .css({ width: '100px' })\n      for (i = 0; i < this.length; i += 1) {\n        for (const prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n\n      return this;\n    }\n  }\n\n  if (arguments.length === 2 && typeof props === 'string') {\n    // .css('width', '100px')\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction each(callback) {\n  if (!callback) return this;\n  this.forEach((el, index) => {\n    callback.apply(el, [el, index]);\n  });\n  return this;\n}\n\nfunction filter(callback) {\n  const result = arrayFilter(this, callback);\n  return $(result);\n}\n\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n\n  return this;\n}\n\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    return this[0] ? this[0].textContent.trim() : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n\n  return this;\n}\n\nfunction is(selector) {\n  const window = getWindow();\n  const document = getDocument();\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n    compareWith = $(selector);\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  if (selector === document) {\n    return el === document;\n  }\n\n  if (selector === window) {\n    return el === window;\n  }\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}\n\nfunction index() {\n  let child = this[0];\n  let i;\n\n  if (child) {\n    i = 0; // eslint-disable-next-line\n\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n\n    return i;\n  }\n\n  return undefined;\n}\n\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n\n  if (index > length - 1) {\n    return $([]);\n  }\n\n  if (index < 0) {\n    const returnIndex = length + index;\n    if (returnIndex < 0) return $([]);\n    return $([this[returnIndex]]);\n  }\n\n  return $([this[index]]);\n}\n\nfunction append(...els) {\n  let newChild;\n  const document = getDocument();\n\n  for (let k = 0; k < els.length; k += 1) {\n    newChild = els[k];\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\n\nfunction prepend(newChild) {\n  const document = getDocument();\n  let i;\n  let j;\n\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n\n  return this;\n}\n\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\n\nfunction insertBefore(selector) {\n  const before = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\n\nfunction insertAfter(selector) {\n  const after = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\n\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return $([this[0].nextElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n\n    el = next;\n  }\n\n  return $(nextEls);\n}\n\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return $([el.previousElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (el.previousElementSibling) return $([el.previousElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n\n    el = prev;\n  }\n\n  return $(prevEls);\n}\n\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\n\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n\n  return $(parents);\n}\n\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n\n      parent = parent.parentNode;\n    }\n  }\n\n  return $(parents);\n}\n\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n\n  if (typeof selector === 'undefined') {\n    return $([]);\n  }\n\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n\n  return closest;\n}\n\nfunction find(selector) {\n  const foundElements = [];\n\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n\n  return $(foundElements);\n}\n\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].children;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector || $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n\n  return $(children);\n}\n\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n\n  return this;\n}\n\nfunction detach() {\n  return this.remove();\n}\n\nfunction add(...els) {\n  const dom = this;\n  let i;\n  let j;\n\n  for (i = 0; i < els.length; i += 1) {\n    const toAdd = $(els[i]);\n\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom.push(toAdd[j]);\n    }\n  }\n\n  return dom;\n}\n\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n\n      el.textContent = '';\n    }\n  }\n\n  return this;\n}\n\n// eslint-disable-next-line\n\nfunction scrollTo(...args) {\n  const window = getWindow();\n  let [left, top, duration, easing, callback] = args;\n\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n\n  if (typeof easing === 'undefined') easing = 'swing';\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n\n    let scrollLeft; // eslint-disable-line\n\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n\n    if (animateTop) {\n      currentTop = el.scrollTop;\n\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n\n    if (!duration) return;\n\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;\n      let done;\n      if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);\n      if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);\n\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      window.requestAnimationFrame(render);\n    }\n\n    window.requestAnimationFrame(render);\n  });\n} // scrollTop(top, duration, easing, callback) {\n\n\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\n\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\n// eslint-disable-next-line\n\nfunction animate(initialProps, initialParams) {\n  const window = getWindow();\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing' // or 'linear'\n\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n\n    }, initialParams),\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - Math.cos(progress * Math.PI) / 2;\n      }\n\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n\n      return progress;\n    },\n\n    stop() {\n      if (a.frameId) {\n        window.cancelAnimationFrame(a.frameId);\n      }\n\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n\n    done(complete) {\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n\n      const elements = []; // Define & Cache Initials & Units\n\n      a.elements.each((el, index) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n        elements[index] = {\n          container: el\n        };\n        Object.keys(props).forEach(prop => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue\n          };\n        });\n      });\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress; // let el;\n\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n\n        if (startTime === null) {\n          startTime = time;\n        }\n\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);\n        }\n\n        elements.forEach(element => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach(prop => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const {\n              initialValue,\n              finalValue,\n              unit\n            } = el[prop];\n            el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);\n            const currentValue = el[prop].currentValue;\n\n            if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return; // Then call\n\n        a.frameId = window.requestAnimationFrame(render);\n      }\n\n      a.frameId = window.requestAnimationFrame(render);\n      return a;\n    }\n\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = 'resize scroll'.split(' ');\n\nfunction shortcut(name) {\n  function eventHandler(...args) {\n    if (typeof args[0] === 'undefined') {\n      for (let i = 0; i < this.length; i += 1) {\n        if (noTrigger.indexOf(name) < 0) {\n          if (name in this[i]) this[i][name]();else {\n            $(this[i]).trigger(name);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    return this.on(name, ...args);\n  }\n\n  return eventHandler;\n}\n\nconst click = shortcut('click');\nconst blur = shortcut('blur');\nconst focus = shortcut('focus');\nconst focusin = shortcut('focusin');\nconst focusout = shortcut('focusout');\nconst keyup = shortcut('keyup');\nconst keydown = shortcut('keydown');\nconst keypress = shortcut('keypress');\nconst submit = shortcut('submit');\nconst change = shortcut('change');\nconst mousedown = shortcut('mousedown');\nconst mousemove = shortcut('mousemove');\nconst mouseup = shortcut('mouseup');\nconst mouseenter = shortcut('mouseenter');\nconst mouseleave = shortcut('mouseleave');\nconst mouseout = shortcut('mouseout');\nconst mouseover = shortcut('mouseover');\nconst touchstart = shortcut('touchstart');\nconst touchend = shortcut('touchend');\nconst touchmove = shortcut('touchmove');\nconst resize = shortcut('resize');\nconst scroll = shortcut('scroll');\n\nexport default $;\nexport { $, add, addClass, animate, animationEnd, append, appendTo, attr, blur, change, children, click, closest, css, data, dataset, detach, each, empty, eq, filter, find, focus, focusin, focusout, hasClass, height, hide, html, index, insertAfter, insertBefore, is, keydown, keypress, keyup, mousedown, mouseenter, mouseleave, mousemove, mouseout, mouseover, mouseup, next, nextAll, off, offset, on, once, outerHeight, outerWidth, parent, parents, prepend, prependTo, prev, prevAll, prop, remove, removeAttr, removeClass, removeData, resize, scroll, scrollLeft, scrollTo, scrollTop, show, siblings, stop, styles, submit, text, toggleClass, touchend, touchmove, touchstart, transform, transition, transitionEnd, trigger, val, value, width };\n"],"sourceRoot":""}